// app/layout.tsx: 전체 앱 공통 레이아웃
// 서버 컴포넌트

import Script from "next/script";
import { cookies } from "next/headers";
import { Geist, Geist_Mono } from "next/font/google";

import "./globals.css";
import { User } from "../components/context/UserContext";
import Layout from "../components/layout/Layout";
import ClientProviders from "./ClientProviders"; // ✅ 클라이언트 전용 감싸기
import { verifySession } from "../components/utils/verifySession";

// // ✅ 동적 렌더링을 강제로 활성화 (쿠키 사용 때문)
export const dynamic = "force-dynamic";

export const metadata = {
  title: "Rumiware",
  description: "Generated by create next app",
};

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export default async function RootLayout({ children }: { children: React.ReactNode }) {
  // ✅ 세션 쿠키 확인 및 사용자 정보 불러오기
  const cookieStore = await cookies();
  const session = cookieStore.get("session")?.value;

  const user = session ? await verifySession(session) : null;

  return (
    <html lang="ko">
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        {/* ✅ Kakao Maps API 스크립트 */}
        <Script
          src="https://t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js"
          strategy="beforeInteractive"
        />

        {/* ✅ 클라이언트 전용 상태관리 Provider 감싸기 */}
        <ClientProviders initialUser={user as User}>
          {/* user를 Layout에 props로 전달 */}
          <Layout user={user}>{children}</Layout>
        </ClientProviders>
      </body>
    </html>
  );
}
